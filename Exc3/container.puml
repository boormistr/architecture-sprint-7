@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

Container_Boundary(PropDevelopment, "PropDevelopment") {

    Container(client_showcase, "Витрина продаж", "Web Application", "Позволяет клиентам выбирать и бронировать недвижимость")

    Container_Boundary(sales_services, "Группа сервисов для продаж") {
        Container(client_tour_app, "client-tour-app", "Application", "Приложение для онлайн-туров")
        Container(client_mart_app, "client-mart-app", "Application", "Приложение для онлайн-сделок")
        Container(client_crm_app, "client-crm-app", "Application", "CRM для управления клиентскими данными")
        Container(client_mart_estate_app, "client-mart-estate-app", "Application", "Приложение для управления данными о недвижимости")
        ContainerDb(client_crm_db, "CRM DB", "Database", "База данных CRM")
        ContainerDb(client_mart_db, "Online Deal DB", "Database", "База данных онлайн-сделок")
        ContainerDb(client_mart_estate_db, "Real Estate DB", "Database", "База данных недвижимости")
    }

    Container_Boundary(services_jku, "Группа сервисов для собственников") {
        Container(tenant_showcase, "Витрина сервисов для собственников", "Web Application", "Обеспечивает доступ к услугам ЖКУ")
        Container(tenant_core_app, "tenant-core-app", "Application", "Сервис для предоставления услуг")
        Container(tenant_crm, "CRM собственников", "Application", "Управление данными о собственниках, включая биометрию и данные автомобилей")
        ContainerDb(tenant_core_db, "Tenant Core DB", "Database", "База данных для core-сервисов собственников")
        ContainerDb(tenant_crm_db, "Tenant CRM DB", "Database", "База данных CRM для собственников")
    }

    Container_Boundary(financial_services, "Финансовые сервисы") {
        Container(accountant_service, "accountant-service-1", "Application", "Система финансового учёта")
        ContainerDb(auth_db, "Auth DB", "Database", "База данных авторизации финансового учёта")
        Container(active_directory, "Active Directory", "Service", "Служба каталогов для аутентификации")
    }

    Container_Boundary(data_services, "Дата-сервисы") {
        Container(data_storage, "Хранилище данных", "Data Storage", "Системное хранилище данных компании")
        Container(dwh, "DWH", "Data Warehouse", "Хранилище данных для BI-анализа")
        Container(bi, "BI", "Business Intelligence", "Система для анализа и отчётности")
    }

    Container(mobile_app, "Мобильное приложение", "Mobile App", "Приложение для управления сервисами ЖКУ и 'Умного дома'")

    Container_Ext(doorbell_service, "Интеллектуальный домофон", "External Service", "Управление доступом через видеодомофон и распознавание лиц")
    Container_Ext(barrier_service, "Интеллектуальный шлагбаум", "External Service", "Управление доступом на основе распознавания номеров автомобилей")
}

Person(client, "Клиент", "Потенциальный покупатель недвижимости")
Person(owner, "Собственник", "Владелец недвижимости, использует мобильное приложение для доступа к сервисам ЖКУ и 'Умного дома'")
Person(government, "Госорганы", "Регистрационные органы, взаимодействуют с онлайн-сделками")
Person(manager, "Менеджер", "Работает с клиентскими данными и управляет процессом продаж")
Person(business_analyst, "Бизнес-аналитик", "Анализирует данные для улучшения процессов")
Person(accountant, "Бухгалтер", "Ведёт финансовый учёт компании")
Person(bi_analyst, "BI-аналитик", "Анализирует данные в системе BI")

Rel(client, client_showcase, "Выбирает и бронирует недвижимость")
Rel(owner, mobile_app, "Использует для управления ЖКУ и 'Умным домом'")
Rel(government, client_mart_app, "Передача данных для регистрации сделок")
Rel(manager, client_crm_app, "Работает с CRM для управления клиентскими данными")
Rel(business_analyst, bi, "Анализ данных для улучшения бизнес-процессов")
Rel(accountant, accountant_service, "Доступ к финансовой системе")
Rel(bi_analyst, bi, "Анализ данных в BI-системе")

Rel(client_showcase, client_tour_app, "Подача данных о клиентах")
Rel(client_showcase, client_mart_app, "Передача данных для онлайн-сделок")
Rel(client_mart_app, client_mart_db, "Запись данных о сделках")
Rel(client_crm_app, client_crm_db, "Запись данных о клиентах")
Rel(client_mart_estate_app, client_mart_estate_db, "Хранение данных о недвижимости")
Rel(client_crm_app, tenant_crm, "Синхронизация данных клиентов")

Rel(tenant_showcase, tenant_core_app, "Доступ к сервисам ЖКУ")
Rel(tenant_core_app, tenant_core_db, "Хранение данных ЖКУ")
Rel(tenant_crm, tenant_crm_db, "Хранение данных собственников")
Rel(tenant_core_app, tenant_crm, "Передача данных о собственниках для сервисов ЖКУ")

Rel(accountant_service, auth_db, "Аутентификация доступа к финансам")
Rel(accountant_service, active_directory, "Аутентификация через Active Directory")

Rel(data_storage, dwh, "Передача данных")
Rel(dwh, bi, "Обработка данных для анализа")

Rel(mobile_app, tenant_core_app, "Обеспечивает доступ к сервисам ЖКУ")
Rel(mobile_app, tenant_crm, "Доступ к данным собственников")
Rel(mobile_app, doorbell_service, "Управление домофоном", "API (OAuth2)")
Rel(mobile_app, barrier_service, "Управление шлагбаумом", "API (OAuth2)")

Rel(doorbell_service, tenant_crm, "Аутентификация пользователей", "API")
Rel(barrier_service, tenant_crm, "Аутентификация автомобилей", "API")

Rel(tenant_crm, client_crm_app, "Синхронизация данных о клиентах и собственниках")
Rel(tenant_crm, data_storage, "Архивирование данных о собственниках")
Rel(client_crm_app, data_storage, "Архивирование данных о клиентах")

@enduml